version: 2.1

orbs:
  win: circleci/windows@2.2.0

jobs:
  build-arm64:
    machine:
      image: ubuntu-2004:current
    resource_class: arm.medium
    steps:
      - checkout
      - restore_cache:
          name: Restore
          key: arm64-{{ checksum "al.cabal" }}
      - run:
          name: Install GHC
          command: |
            sudo apt-get install ghc cabal-install libopenal-dev

            # Fix for Cabal-2.4.0.0 not initializing the package DB automatically
            if [ ! -d ~/.cabal/store/ghc-8.6.5 ]; then
              mkdir -p ~/.cabal/store/ghc-8.6.5;
              ghc-pkg init ~/.cabal/store/ghc-8.6.5/package.db;
            else
              echo 'Package directory already present';
            fi
      - run:
          name: Update Dependencies
          command: cabal new-update

      - run:
          name: Build
          command: cabal new-build
      - save_cache:
          name: Cache
          key: arm64-{{ checksum "al.cabal" }}
          paths:
            - "/root/.cabal"
            - "dist-newstyle"

  build-linux:
    machine:
      image: ubuntu-2004:current
    resource_class: medium
    parameters:
      version:
        type: string
    steps:
      - checkout
      - restore_cache:
          name: Restore
          key: linux-<< parameters.version >>-{{ checksum "al.cabal" }}
      - run:
          name: Install GHC
          command: |
            sudo add-apt-repository ppa:hvr/ghc
            sudo apt-get install ghc-<< parameters.version >> cabal-install-3.4 libopenal-dev
            echo 'export PATH=/opt/ghc/bin:$PATH' >> $BASH_ENV

      - run:
          name: Update Dependencies
          command: cabal new-update
      - run:
          name: Build
          command: cabal new-build --enable-documentation
      - save_cache:
          name: Cache
          key: linux-<< parameters.version >>-{{ checksum "al.cabal" }}
          paths:
            - "/root/.cabal"
            - "dist-newstyle"

  build-macos:
    macos:
      xcode: 12.5.1
    resource_class: medium
    parameters:
      resolver:
        type: string
    steps:
      - checkout
      - restore_cache:
          name: Restore
          key: macos-<< parameters.resolver >>-{{ checksum "al.cabal" }}
      - run:
          name: Install Stack
          command: |
            brew install openal-soft
            curl -sSL https://get.haskellstack.org/ | sh

      - run:
          name: Build
          command: |
            stack init --resolver << parameters.resolver >> --omit-packages
            stack build --no-terminal
      - save_cache:
          name: Cache
          key: macos-<< parameters.resolver >>-{{ checksum "al.cabal" }}
          paths:
            - "$HOME/.stack"
            - ".stack-work"

  build-windows:
    executor: win/default
    parameters:
      resolver:
        type: string
    steps:
      - checkout
      - restore_cache:
          name: Restore
          key: windows--<< parameters.resolver >>-{{ checksum "al.cabal" }}
      - run:
          name: Install Stack
          shell: bash.exe
          command: |
            choco install openalsdk
            mkdir "C:/Program Files (x86)/OpenAL 1.1 SDK/include/AL"
            mv "C:/Program Files (x86)/OpenAL 1.1 SDK/include/al.h" "C:/Program Files (x86)/OpenAL 1.1 SDK/include/AL/al.h"
            mv "C:/Program Files (x86)/OpenAL 1.1 SDK/include/alc.h" "C:/Program Files (x86)/OpenAL 1.1 SDK/include/AL/alc.h"
            mkdir stack-build
            cd stack-build
            curl -LO --no-progress-meter https://get.haskellstack.org/stable/windows-x86_64.zip
            unzip windows-x86_64.zip
            mkdir -pv "$APPDATA/local/bin"
            mv -v stack.exe "$APPDATA/local/bin"
            cd ..
            echo 'export PATH=$APPDATA/local/bin:$PATH' >> $BASH_ENV

      - run:
          name: Build
          shell: bash.exe
          command: |
            stack init --resolver << parameters.resolver >> --omit-packages
            stack build --no-terminal
      - save_cache:
          name: Cache
          key: windows-<< parameters.resolver >>-{{ checksum "al.cabal" }}
          paths:
            - "$APPDATA/stack"
            - ".stack-work"



workflows:
  workflow:
    jobs:
      - build-arm64:
          name: aarch64-8.6.5
      - build-linux:
          name: linux-8.2.2
          version: 8.2.2
      - build-linux:
          name: linux-8.4.4
          version: 8.4.4
      - build-linux:
          name: linux-8.6.5
          version: 8.6.5
      - build-linux:
          name: linux-8.8.4
          version: 8.8.4
      - build-linux:
          name: linux-8.10.4
          version: 8.10.4
      - build-linux:
          name: linux-9.0.1
          version: 9.0.1
      - build-macos:
          name: macos-lts-19.7
          resolver: lts-19.7
      - build-windows:
          name: windows-lts-19.7
          resolver: lts-19.7
